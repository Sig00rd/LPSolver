Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> result
Rule 1     result -> expression
Rule 2     result -> empty
Rule 3     result -> expression COMPARISON expression COMPARISON expression
Rule 4     result -> expression COMPARISON expression
Rule 5     factor -> INT
Rule 6     factor -> FLOAT
Rule 7     factor -> CONST_PI
Rule 8     factor -> CONST_E
Rule 9     factor -> VARIABLE
Rule 10    expression -> MINUS expression
Rule 11    expression -> term
Rule 12    term -> factor
Rule 13    expression -> expression PLUS expression
Rule 14    expression -> expression MINUS expression
Rule 15    term -> term MULTIPLY factor
Rule 16    term -> term DIVIDE factor
Rule 17    expression -> expression POW expression
Rule 18    expression -> term VARIABLE
Rule 19    factor -> LPAREN expression RPAREN
Rule 20    expression -> FUNCTION LPAREN factor RPAREN
Rule 21    empty -> <empty>

Terminals, with rules where they appear

COMPARISON           : 3 3 4
CONST_E              : 8
CONST_PI             : 7
DIVIDE               : 16
FLOAT                : 6
FUNCTION             : 20
INT                  : 5
LPAREN               : 19 20
MINUS                : 10 14
MULTIPLY             : 15
PLUS                 : 13
POW                  : 17
RPAREN               : 19 20
VARIABLE             : 9 18
error                : 

Nonterminals, with rules where they appear

empty                : 2
expression           : 1 3 3 3 4 4 10 13 13 14 14 17 17 19
factor               : 12 15 16 20
result               : 0
term                 : 11 15 16 18

Parsing method: LALR

state 0

    (0) S' -> . result
    (1) result -> . expression
    (2) result -> . empty
    (3) result -> . expression COMPARISON expression COMPARISON expression
    (4) result -> . expression COMPARISON expression
    (10) expression -> . MINUS expression
    (11) expression -> . term
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (17) expression -> . expression POW expression
    (18) expression -> . term VARIABLE
    (20) expression -> . FUNCTION LPAREN factor RPAREN
    (21) empty -> .
    (12) term -> . factor
    (15) term -> . term MULTIPLY factor
    (16) term -> . term DIVIDE factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    MINUS           shift and go to state 4
    FUNCTION        shift and go to state 7
    $end            reduce using rule 21 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    result                         shift and go to state 1
    expression                     shift and go to state 2
    empty                          shift and go to state 3
    term                           shift and go to state 5
    factor                         shift and go to state 9

state 1

    (0) S' -> result .



state 2

    (1) result -> expression .
    (3) result -> expression . COMPARISON expression COMPARISON expression
    (4) result -> expression . COMPARISON expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (17) expression -> expression . POW expression

    $end            reduce using rule 1 (result -> expression .)
    COMPARISON      shift and go to state 14
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    POW             shift and go to state 17


state 3

    (2) result -> empty .

    $end            reduce using rule 2 (result -> empty .)


state 4

    (10) expression -> MINUS . expression
    (10) expression -> . MINUS expression
    (11) expression -> . term
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (17) expression -> . expression POW expression
    (18) expression -> . term VARIABLE
    (20) expression -> . FUNCTION LPAREN factor RPAREN
    (12) term -> . factor
    (15) term -> . term MULTIPLY factor
    (16) term -> . term DIVIDE factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    MINUS           shift and go to state 4
    FUNCTION        shift and go to state 7
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    expression                     shift and go to state 18
    term                           shift and go to state 5
    factor                         shift and go to state 9

state 5

    (11) expression -> term .
    (18) expression -> term . VARIABLE
    (15) term -> term . MULTIPLY factor
    (16) term -> term . DIVIDE factor

    COMPARISON      reduce using rule 11 (expression -> term .)
    PLUS            reduce using rule 11 (expression -> term .)
    MINUS           reduce using rule 11 (expression -> term .)
    POW             reduce using rule 11 (expression -> term .)
    $end            reduce using rule 11 (expression -> term .)
    RPAREN          reduce using rule 11 (expression -> term .)
    VARIABLE        shift and go to state 19
    MULTIPLY        shift and go to state 20
    DIVIDE          shift and go to state 21


state 6

    (9) factor -> VARIABLE .

    VARIABLE        reduce using rule 9 (factor -> VARIABLE .)
    MULTIPLY        reduce using rule 9 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 9 (factor -> VARIABLE .)
    COMPARISON      reduce using rule 9 (factor -> VARIABLE .)
    PLUS            reduce using rule 9 (factor -> VARIABLE .)
    MINUS           reduce using rule 9 (factor -> VARIABLE .)
    POW             reduce using rule 9 (factor -> VARIABLE .)
    $end            reduce using rule 9 (factor -> VARIABLE .)
    RPAREN          reduce using rule 9 (factor -> VARIABLE .)


state 7

    (20) expression -> FUNCTION . LPAREN factor RPAREN

    LPAREN          shift and go to state 22


state 8

    (19) factor -> LPAREN . expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . term
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (17) expression -> . expression POW expression
    (18) expression -> . term VARIABLE
    (20) expression -> . FUNCTION LPAREN factor RPAREN
    (12) term -> . factor
    (15) term -> . term MULTIPLY factor
    (16) term -> . term DIVIDE factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    MINUS           shift and go to state 4
    FUNCTION        shift and go to state 7
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    expression                     shift and go to state 23
    term                           shift and go to state 5
    factor                         shift and go to state 9

state 9

    (12) term -> factor .

    VARIABLE        reduce using rule 12 (term -> factor .)
    MULTIPLY        reduce using rule 12 (term -> factor .)
    DIVIDE          reduce using rule 12 (term -> factor .)
    COMPARISON      reduce using rule 12 (term -> factor .)
    PLUS            reduce using rule 12 (term -> factor .)
    MINUS           reduce using rule 12 (term -> factor .)
    POW             reduce using rule 12 (term -> factor .)
    $end            reduce using rule 12 (term -> factor .)
    RPAREN          reduce using rule 12 (term -> factor .)


state 10

    (5) factor -> INT .

    VARIABLE        reduce using rule 5 (factor -> INT .)
    MULTIPLY        reduce using rule 5 (factor -> INT .)
    DIVIDE          reduce using rule 5 (factor -> INT .)
    COMPARISON      reduce using rule 5 (factor -> INT .)
    PLUS            reduce using rule 5 (factor -> INT .)
    MINUS           reduce using rule 5 (factor -> INT .)
    POW             reduce using rule 5 (factor -> INT .)
    $end            reduce using rule 5 (factor -> INT .)
    RPAREN          reduce using rule 5 (factor -> INT .)


state 11

    (6) factor -> FLOAT .

    VARIABLE        reduce using rule 6 (factor -> FLOAT .)
    MULTIPLY        reduce using rule 6 (factor -> FLOAT .)
    DIVIDE          reduce using rule 6 (factor -> FLOAT .)
    COMPARISON      reduce using rule 6 (factor -> FLOAT .)
    PLUS            reduce using rule 6 (factor -> FLOAT .)
    MINUS           reduce using rule 6 (factor -> FLOAT .)
    POW             reduce using rule 6 (factor -> FLOAT .)
    $end            reduce using rule 6 (factor -> FLOAT .)
    RPAREN          reduce using rule 6 (factor -> FLOAT .)


state 12

    (7) factor -> CONST_PI .

    VARIABLE        reduce using rule 7 (factor -> CONST_PI .)
    MULTIPLY        reduce using rule 7 (factor -> CONST_PI .)
    DIVIDE          reduce using rule 7 (factor -> CONST_PI .)
    COMPARISON      reduce using rule 7 (factor -> CONST_PI .)
    PLUS            reduce using rule 7 (factor -> CONST_PI .)
    MINUS           reduce using rule 7 (factor -> CONST_PI .)
    POW             reduce using rule 7 (factor -> CONST_PI .)
    $end            reduce using rule 7 (factor -> CONST_PI .)
    RPAREN          reduce using rule 7 (factor -> CONST_PI .)


state 13

    (8) factor -> CONST_E .

    VARIABLE        reduce using rule 8 (factor -> CONST_E .)
    MULTIPLY        reduce using rule 8 (factor -> CONST_E .)
    DIVIDE          reduce using rule 8 (factor -> CONST_E .)
    COMPARISON      reduce using rule 8 (factor -> CONST_E .)
    PLUS            reduce using rule 8 (factor -> CONST_E .)
    MINUS           reduce using rule 8 (factor -> CONST_E .)
    POW             reduce using rule 8 (factor -> CONST_E .)
    $end            reduce using rule 8 (factor -> CONST_E .)
    RPAREN          reduce using rule 8 (factor -> CONST_E .)


state 14

    (3) result -> expression COMPARISON . expression COMPARISON expression
    (4) result -> expression COMPARISON . expression
    (10) expression -> . MINUS expression
    (11) expression -> . term
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (17) expression -> . expression POW expression
    (18) expression -> . term VARIABLE
    (20) expression -> . FUNCTION LPAREN factor RPAREN
    (12) term -> . factor
    (15) term -> . term MULTIPLY factor
    (16) term -> . term DIVIDE factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    MINUS           shift and go to state 4
    FUNCTION        shift and go to state 7
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    expression                     shift and go to state 24
    term                           shift and go to state 5
    factor                         shift and go to state 9

state 15

    (13) expression -> expression PLUS . expression
    (10) expression -> . MINUS expression
    (11) expression -> . term
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (17) expression -> . expression POW expression
    (18) expression -> . term VARIABLE
    (20) expression -> . FUNCTION LPAREN factor RPAREN
    (12) term -> . factor
    (15) term -> . term MULTIPLY factor
    (16) term -> . term DIVIDE factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    MINUS           shift and go to state 4
    FUNCTION        shift and go to state 7
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    expression                     shift and go to state 25
    term                           shift and go to state 5
    factor                         shift and go to state 9

state 16

    (14) expression -> expression MINUS . expression
    (10) expression -> . MINUS expression
    (11) expression -> . term
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (17) expression -> . expression POW expression
    (18) expression -> . term VARIABLE
    (20) expression -> . FUNCTION LPAREN factor RPAREN
    (12) term -> . factor
    (15) term -> . term MULTIPLY factor
    (16) term -> . term DIVIDE factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    MINUS           shift and go to state 4
    FUNCTION        shift and go to state 7
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    expression                     shift and go to state 26
    term                           shift and go to state 5
    factor                         shift and go to state 9

state 17

    (17) expression -> expression POW . expression
    (10) expression -> . MINUS expression
    (11) expression -> . term
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (17) expression -> . expression POW expression
    (18) expression -> . term VARIABLE
    (20) expression -> . FUNCTION LPAREN factor RPAREN
    (12) term -> . factor
    (15) term -> . term MULTIPLY factor
    (16) term -> . term DIVIDE factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    MINUS           shift and go to state 4
    FUNCTION        shift and go to state 7
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    expression                     shift and go to state 27
    term                           shift and go to state 5
    factor                         shift and go to state 9

state 18

    (10) expression -> MINUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (17) expression -> expression . POW expression

    COMPARISON      reduce using rule 10 (expression -> MINUS expression .)
    PLUS            reduce using rule 10 (expression -> MINUS expression .)
    MINUS           reduce using rule 10 (expression -> MINUS expression .)
    POW             reduce using rule 10 (expression -> MINUS expression .)
    $end            reduce using rule 10 (expression -> MINUS expression .)
    RPAREN          reduce using rule 10 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]
  ! POW             [ shift and go to state 17 ]


state 19

    (18) expression -> term VARIABLE .

    COMPARISON      reduce using rule 18 (expression -> term VARIABLE .)
    PLUS            reduce using rule 18 (expression -> term VARIABLE .)
    MINUS           reduce using rule 18 (expression -> term VARIABLE .)
    POW             reduce using rule 18 (expression -> term VARIABLE .)
    $end            reduce using rule 18 (expression -> term VARIABLE .)
    RPAREN          reduce using rule 18 (expression -> term VARIABLE .)


state 20

    (15) term -> term MULTIPLY . factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    factor                         shift and go to state 28

state 21

    (16) term -> term DIVIDE . factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    factor                         shift and go to state 29

state 22

    (20) expression -> FUNCTION LPAREN . factor RPAREN
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    factor                         shift and go to state 30

state 23

    (19) factor -> LPAREN expression . RPAREN
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (17) expression -> expression . POW expression

    RPAREN          shift and go to state 31
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    POW             shift and go to state 17


state 24

    (3) result -> expression COMPARISON expression . COMPARISON expression
    (4) result -> expression COMPARISON expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (17) expression -> expression . POW expression

    COMPARISON      shift and go to state 32
    $end            reduce using rule 4 (result -> expression COMPARISON expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    POW             shift and go to state 17


state 25

    (13) expression -> expression PLUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (17) expression -> expression . POW expression

    COMPARISON      reduce using rule 13 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 13 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 13 (expression -> expression PLUS expression .)
    $end            reduce using rule 13 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression PLUS expression .)
    POW             shift and go to state 17

  ! POW             [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]


state 26

    (14) expression -> expression MINUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (17) expression -> expression . POW expression

    COMPARISON      reduce using rule 14 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 14 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 14 (expression -> expression MINUS expression .)
    $end            reduce using rule 14 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression MINUS expression .)
    POW             shift and go to state 17

  ! POW             [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]


state 27

    (17) expression -> expression POW expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (17) expression -> expression . POW expression

    COMPARISON      reduce using rule 17 (expression -> expression POW expression .)
    PLUS            reduce using rule 17 (expression -> expression POW expression .)
    MINUS           reduce using rule 17 (expression -> expression POW expression .)
    $end            reduce using rule 17 (expression -> expression POW expression .)
    RPAREN          reduce using rule 17 (expression -> expression POW expression .)
    POW             shift and go to state 17

  ! POW             [ reduce using rule 17 (expression -> expression POW expression .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]


state 28

    (15) term -> term MULTIPLY factor .

    VARIABLE        reduce using rule 15 (term -> term MULTIPLY factor .)
    MULTIPLY        reduce using rule 15 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 15 (term -> term MULTIPLY factor .)
    COMPARISON      reduce using rule 15 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 15 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 15 (term -> term MULTIPLY factor .)
    POW             reduce using rule 15 (term -> term MULTIPLY factor .)
    $end            reduce using rule 15 (term -> term MULTIPLY factor .)
    RPAREN          reduce using rule 15 (term -> term MULTIPLY factor .)


state 29

    (16) term -> term DIVIDE factor .

    VARIABLE        reduce using rule 16 (term -> term DIVIDE factor .)
    MULTIPLY        reduce using rule 16 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 16 (term -> term DIVIDE factor .)
    COMPARISON      reduce using rule 16 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 16 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 16 (term -> term DIVIDE factor .)
    POW             reduce using rule 16 (term -> term DIVIDE factor .)
    $end            reduce using rule 16 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 16 (term -> term DIVIDE factor .)


state 30

    (20) expression -> FUNCTION LPAREN factor . RPAREN

    RPAREN          shift and go to state 33


state 31

    (19) factor -> LPAREN expression RPAREN .

    VARIABLE        reduce using rule 19 (factor -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 19 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 19 (factor -> LPAREN expression RPAREN .)
    COMPARISON      reduce using rule 19 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 19 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 19 (factor -> LPAREN expression RPAREN .)
    POW             reduce using rule 19 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 19 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 19 (factor -> LPAREN expression RPAREN .)


state 32

    (3) result -> expression COMPARISON expression COMPARISON . expression
    (10) expression -> . MINUS expression
    (11) expression -> . term
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (17) expression -> . expression POW expression
    (18) expression -> . term VARIABLE
    (20) expression -> . FUNCTION LPAREN factor RPAREN
    (12) term -> . factor
    (15) term -> . term MULTIPLY factor
    (16) term -> . term DIVIDE factor
    (5) factor -> . INT
    (6) factor -> . FLOAT
    (7) factor -> . CONST_PI
    (8) factor -> . CONST_E
    (9) factor -> . VARIABLE
    (19) factor -> . LPAREN expression RPAREN

    MINUS           shift and go to state 4
    FUNCTION        shift and go to state 7
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CONST_PI        shift and go to state 12
    CONST_E         shift and go to state 13
    VARIABLE        shift and go to state 6
    LPAREN          shift and go to state 8

    expression                     shift and go to state 34
    term                           shift and go to state 5
    factor                         shift and go to state 9

state 33

    (20) expression -> FUNCTION LPAREN factor RPAREN .

    COMPARISON      reduce using rule 20 (expression -> FUNCTION LPAREN factor RPAREN .)
    PLUS            reduce using rule 20 (expression -> FUNCTION LPAREN factor RPAREN .)
    MINUS           reduce using rule 20 (expression -> FUNCTION LPAREN factor RPAREN .)
    POW             reduce using rule 20 (expression -> FUNCTION LPAREN factor RPAREN .)
    $end            reduce using rule 20 (expression -> FUNCTION LPAREN factor RPAREN .)
    RPAREN          reduce using rule 20 (expression -> FUNCTION LPAREN factor RPAREN .)


state 34

    (3) result -> expression COMPARISON expression COMPARISON expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (17) expression -> expression . POW expression

    $end            reduce using rule 3 (result -> expression COMPARISON expression COMPARISON expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    POW             shift and go to state 17

