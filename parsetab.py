
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocCOMPARISONleftPLUSMINUSleftMULTIPLYDIVIDErightPOWrightUMINUSCOMPARISON CONST_E CONST_PI DIVIDE FLOAT FUNCTION INT LPAREN MINUS MULTIPLY PLUS POW RPAREN VARIABLE\n        result : expression\n               | empty\n        result : expression COMPARISON expression COMPARISON expressionresult : expression COMPARISON expression\n        expression : INT\n                   | FLOAT\n        \n        expression : CONST_PI\n                   | CONST_E\n        expression : VARIABLEexpression : MINUS expression %prec UMINUSexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression MULTIPLY expressionexpression : expression DIVIDE expressionexpression : expression POW expressionexpression : LPAREN expression RPARENexpression : FUNCTION LPAREN expression RPARENempty : '
    
_lr_action_items = {'INT':([0,9,10,12,13,14,15,16,17,20,29,],[4,4,4,4,4,4,4,4,4,4,4,]),'FLOAT':([0,9,10,12,13,14,15,16,17,20,29,],[5,5,5,5,5,5,5,5,5,5,5,]),'CONST_PI':([0,9,10,12,13,14,15,16,17,20,29,],[6,6,6,6,6,6,6,6,6,6,6,]),'CONST_E':([0,9,10,12,13,14,15,16,17,20,29,],[7,7,7,7,7,7,7,7,7,7,7,]),'VARIABLE':([0,9,10,12,13,14,15,16,17,20,29,],[8,8,8,8,8,8,8,8,8,8,8,]),'MINUS':([0,2,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,],[9,14,-5,-6,-7,-8,-9,9,9,9,9,9,9,9,9,-10,14,9,14,-11,-12,-13,-14,-15,-16,14,9,-17,14,]),'LPAREN':([0,9,10,11,12,13,14,15,16,17,20,29,],[10,10,10,20,10,10,10,10,10,10,10,10,]),'FUNCTION':([0,9,10,12,13,14,15,16,17,20,29,],[11,11,11,11,11,11,11,11,11,11,11,]),'$end':([0,1,2,3,4,5,6,7,8,18,21,22,23,24,25,26,27,30,31,],[-18,0,-1,-2,-5,-6,-7,-8,-9,-10,-4,-11,-12,-13,-14,-15,-16,-17,-3,]),'COMPARISON':([2,4,5,6,7,8,18,21,22,23,24,25,26,27,30,],[12,-5,-6,-7,-8,-9,-10,29,-11,-12,-13,-14,-15,-16,-17,]),'PLUS':([2,4,5,6,7,8,18,19,21,22,23,24,25,26,27,28,30,31,],[13,-5,-6,-7,-8,-9,-10,13,13,-11,-12,-13,-14,-15,-16,13,-17,13,]),'MULTIPLY':([2,4,5,6,7,8,18,19,21,22,23,24,25,26,27,28,30,31,],[15,-5,-6,-7,-8,-9,-10,15,15,15,15,-13,-14,-15,-16,15,-17,15,]),'DIVIDE':([2,4,5,6,7,8,18,19,21,22,23,24,25,26,27,28,30,31,],[16,-5,-6,-7,-8,-9,-10,16,16,16,16,-13,-14,-15,-16,16,-17,16,]),'POW':([2,4,5,6,7,8,18,19,21,22,23,24,25,26,27,28,30,31,],[17,-5,-6,-7,-8,-9,-10,17,17,17,17,17,17,17,-16,17,-17,17,]),'RPAREN':([4,5,6,7,8,18,19,22,23,24,25,26,27,28,30,],[-5,-6,-7,-8,-9,-10,27,-11,-12,-13,-14,-15,-16,30,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'result':([0,],[1,]),'expression':([0,9,10,12,13,14,15,16,17,20,29,],[2,18,19,21,22,23,24,25,26,28,31,]),'empty':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> result","S'",1,None,None,None),
  ('result -> expression','result',1,'p_result_calc','parser.py',48),
  ('result -> empty','result',1,'p_result_calc','parser.py',49),
  ('result -> expression COMPARISON expression COMPARISON expression','result',5,'p_result_doublecomp','parser.py',54),
  ('result -> expression COMPARISON expression','result',3,'p_result_comp','parser.py',59),
  ('expression -> INT','expression',1,'p_expression_int_float','parser.py',72),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','parser.py',73),
  ('expression -> CONST_PI','expression',1,'p_expression_constant','parser.py',79),
  ('expression -> CONST_E','expression',1,'p_expression_constant','parser.py',80),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','parser.py',85),
  ('expression -> MINUS expression','expression',2,'p_expression_u_minus','parser.py',89),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','parser.py',93),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','parser.py',97),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_multiply','parser.py',101),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_divide','parser.py',105),
  ('expression -> expression POW expression','expression',3,'p_expression_power','parser.py',109),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',114),
  ('expression -> FUNCTION LPAREN expression RPAREN','expression',4,'p_expression_function','parser.py',118),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',130),
]
